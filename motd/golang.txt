╔══════════════════════════════════════════════════════════════╗
║                    Go Quick Reference                         ║
╚══════════════════════════════════════════════════════════════╝

🔵 Go Environment:
   go version                                    # Check Go version
   go env                                        # Show environment

📦 Module Management:
   go mod init myapp                             # Initialize module
   go mod tidy                                   # Add missing and remove unused modules
   go get package@version                        # Add dependency
   go mod download                               # Download dependencies

🚀 Build & Run:
   go run main.go                                # Run directly
   go build -o myapp                             # Build executable
   go build -o /shared/myapp                     # Build to shared folder
   
   # Cross-compile
   GOOS=linux GOARCH=amd64 go build -o myapp
   GOOS=windows GOARCH=amd64 go build -o myapp.exe

🧪 Testing:
   go test                                       # Run tests
   go test -v                                    # Verbose output
   go test -cover                                # With coverage
   go test -bench=.                              # Run benchmarks

📝 Quick HTTP Server:
   cat > /shared/server.go <<'EOF2'
   package main
   
   import (
       "fmt"
       "net/http"
   )
   
   func main() {
       http.HandleFunc("/", func(w http.ResponseWriter, r *http.Request) {
           fmt.Fprintf(w, "Hello from Go!")
       })
       http.ListenAndServe(":8080", nil)
   }
   EOF2
   
   go run /shared/server.go

🔧 Useful Commands:
   go fmt ./...                                  # Format code
   go vet ./...                                  # Examine code
   go doc package                                # View documentation
   gofmt -w file.go                              # Format file

Press Enter to continue...
