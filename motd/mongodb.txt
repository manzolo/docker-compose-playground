╔══════════════════════════════════════════════════════════════╗
║                  MongoDB Quick Reference                      ║
╚══════════════════════════════════════════════════════════════╝

🔐 Connection Info:
   Host: localhost / Container IP
   Port: 27017
   No authentication required (default)

📊 Basic Commands:
   mongosh                                       # Connect to MongoDB
   show dbs                                      # List databases
   use mydb                                      # Switch/create database
   show collections                              # List collections
   db.collection.find()                          # Show all documents

💾 Backup & Restore:
   # Backup entire database
   mongodump --db playground --out /shared/backup
   
   # Backup specific collection
   mongodump --db playground --collection users --out /shared/backup
   
   # Restore database
   mongorestore --db playground /shared/backup/playground
   
   # Export to JSON
   mongoexport --db playground --collection users --out /shared/users.json
   
   # Import from JSON
   mongoimport --db playground --collection users --file /shared/users.json

🔍 CRUD Operations:
   # Insert
   db.users.insertOne({name: "John", age: 30})
   db.users.insertMany([{name: "Jane"}, {name: "Bob"}])
   
   # Find
   db.users.find()                               # Find all
   db.users.find({name: "John"})                 # Find with filter
   db.users.findOne({name: "John"})              # Find one
   
   # Update
   db.users.updateOne({name: "John"}, {$set: {age: 31}})
   db.users.updateMany({}, {$inc: {age: 1}})
   
   # Delete
   db.users.deleteOne({name: "John"})
   db.users.deleteMany({age: {$lt: 18}})

📈 Aggregation Example:
   db.users.aggregate([
     {$match: {age: {$gte: 18}}},
     {$group: {_id: "$city", count: {$sum: 1}}},
     {$sort: {count: -1}}
   ])

Press Enter to continue...
